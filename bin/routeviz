#!/usr/bin/env ruby

require 'open3'

if ARGV.empty?
  puts <<USAGE
Usage: #$0 host [host]...
USAGE
  exit 1
end

module Routeviz
  class RouteGraph
    def new_path host
      Route.new(host).tap { |r| routes << r }
    end

    def routes
      @routes ||= []
    end
  end

  class Route < Array
    def initialize host
      @host = host
    end

    def host
      @host
    end

    def inspect
      "{route to #{host}: #{super}"
    end
  end
end

routes = Routeviz::RouteGraph.new
ARGV.each do |host|
  route = routes.new_path host
  max_hops = 10
  queries_per_hop = 1
  command = "traceroute -n -q #{queries_per_hop} -m #{max_hops} #{host}"
  IO.popen(command, 'r') do |cmd|
    begin
      while line = cmd.readline
        route << line.strip.split(/\s+/)[1]
        puts line
      end
    rescue EOFError
    end
  end
end

puts routes.inspect
